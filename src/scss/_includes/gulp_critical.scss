@import '../../scss/_includes/_colors.scss';
@import '../../scss/_includes/_breakpoints.scss';

/*--------------------------------------------------------------
# Introduction
--------------------------------------------------------------*/
$introduction__font-size: 4rem;
.introduction {
  font-family: "Helvetica", "Arial", "sans-serif";
  font-size: $introduction__font-size;
  line-height: 1;
  background: $color__primary;
  color: #FFF;

  @media screen and (max-width: $breakpoint__mobile--max) {
    font-size: $introduction__font-size * 0.5;
  }

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;  
  text-align: center;

  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.introduction__text-contain {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;  
  text-align: center;
  margin-bottom: $introduction__font-size;

  @media screen and (max-width: $breakpoint__mobile--max) {
    margin-bottom: $introduction__font-size * 0.5;
  }
}

// Text Styles
.introduction__header {
  font-size: 20vh;
  font-weight: bold;

  @media screen and (max-width: $breakpoint__mobile--max) {
    font-size: 7rem;
  }
}
.introduction__subheading {
}
.introduction__name {
}

// Img
.introduction__sw-img {
  width: 8rem;
  height: 8rem;
  border-radius: 50%;
  margin: -4rem auto 0rem;
  background-color: #848484;
  background-image: url(../assets/la_style_sm.jpg);
  background-size: cover;
  background-position: center;
}


// Creates a keyframe animation that increments the translateY * height * incrementer
// Set the names_max as the length of the Introduction.names array
// 
// 0% {
//   transform: translateY(0rem);
// }
// 10% {
//   transform: translateY(4rem);
// }
// ...etc
// 
$name_height: 4rem;
$names_max: 10;
$animation_duration: 1.1s;
$initial_delay: 0.33s;
@keyframes name_translate {
  @for $i from 0 to $names_max {
    #{100 / $names_max * $i}% {
      transform: translateY($i * $name_height);
    }
  }
  100% {
    transform: translateY(($names_max - 1) * $name_height);
  }
}

// Name Animations
.introduction__name-translate {
  position: absolute;
  width: 100%;
  bottom: -1 * $introduction__font-size;

  animation: name_translate ($names_max * $animation_duration) (0.5s + $initial_delay) both ease-in-out 1;
  animation: name_translate ($names_max * $animation_duration) (0.5s + $initial_delay) both cubic-bezier(0.4, 0, 0.2, 1) 1;

}

@keyframes fadeNameInOut {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 1;
  }
  66% {
    opacity: 1;
  }
  100% {
    opacity: 0.4;
  }
}

.introduction__name {
  
  height: $name_height;
  line-height: $name_height;
  animation: fadeNameInOut 1s $initial_delay both ease-out 1;

  // fade in and out with a cascading delay. 
  // corresponds with introduction__name-translate
  @for $i from 1 through ($names_max) {
    &:nth-child( #{$names_max - $i} ){
      animation-delay: $i * $animation_duration + $initial_delay;
    }
  }

}

/*--------------------------------------------------------------
# LoaderCircle
--------------------------------------------------------------*/
$green: #008744;
$blue: #0057e7;
$red: #d62d20;
$yellow: #ffa700;
$white: #eee;

.loader-circle {
  position: relative;
  margin: 0px auto;
  width: 100%;
  &:before {
    content:'';
    display: block;
    padding-top: 100%;
  }
}

.loader-circle__rotate {
  height: 100%;
  transform-origin: center center;
  width: 100%;
  position: absolute;
  top: 0; bottom: 0; left: 0; right: 0;
  margin: auto;
  animation: rotate 2s linear infinite;
}


.loader-circle__path {
  stroke-dasharray: 1,200;
  stroke-dashoffset: 0;
  animation: 
   dash 1.5s ease-in-out infinite,
   color 6s ease-in-out infinite
  ;
  stroke-linecap: round;
}

@keyframes rotate{
 100%{
  transform: rotate(360deg);
 }
}
@keyframes dash{
 0%{
  stroke-dasharray: 1,200;
  stroke-dashoffset: 0;
 }
 50%{
  stroke-dasharray: 89,200;
  stroke-dashoffset: -35px;
 }
 100%{
  stroke-dasharray: 89,200;
  stroke-dashoffset: -124px;
 }
}
@keyframes color{
  100%, 0%{
    stroke: $red;
  }
  40%{
    stroke: $blue;
  }
  66%{
    stroke: $green;
  }
  80%, 90%{
    stroke: $yellow;
  }
}